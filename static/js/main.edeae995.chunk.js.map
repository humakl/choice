{"version":3,"sources":["components/common/paginator/paginator.module.css","components/users/users.module.css","components/profile/myPosts/post/post.module.css","components/nav/nav.module.css","reportWebVitals.js","api/api.js","redux/authReducer.js","redux/dialogsReducer.js","redux/profileReducer.js","redux/sidebarReducer.js","utils/objectHelpers.js","redux/usersReducer.js","redux/appReducer.js","redux/reduxStore.js","components/nav/nav.jsx","components/news/news.jsx","components/photos/photos.jsx","components/settings/settings.jsx","hoc/withAuthRedirect.js","utils/validators/validators.js","components/common/FormsControls/formsControls.js","components/dialogs/dialogItem/dialogItem.jsx","components/dialogs/message/message.jsx","components/dialogs/dialogs.jsx","components/dialogs/dialogsContainer.jsx","components/common/paginator/paginator.jsx","assets/images/photo_small.jpg","components/users/user.jsx","components/users/users.jsx","assets/images/1484.gif","components/common/preloader/preloader.js","redux/usersSelectors.js","components/users/usersContainer.jsx","components/profile/myPosts/post/post.jsx","components/profile/myPosts/myPosts.jsx","components/profile/myPosts/myPostsContainer.jsx","components/profile/profileInfo/profileStatusWithHooks.jsx","components/profile/profileInfo/profileInfo.jsx","components/profile/profile.jsx","components/profile/profileContainer.jsx","components/header/header.jsx","components/header/headerContainer.jsx","components/login/login.jsx","App.js","index.js","components/dialogs/dialogs.module.css","components/common/FormsControls/formsControls.module.css","components/profile/myPosts/myPosts.module.css","components/profile/profileInfo/profileInfo.module.css","components/header/header.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","SET_USER_DATA","initialState","login","isAuth","setAuthUserData","type","payload","getAuthUserData","dispatch","a","resultCode","id","authReducer","state","action","ADD_NEW_MESSAGE","dialogs","name","messages","talker","message","dialogsReducer","newMessageText","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likesCounter","profile","setStatus","profileReducer","newPostText","sidebar","friendsName","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","filter","INITIALIZATION_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","messagesPage","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Nav","props","className","cf","nav","item","to","activeClassName","activelink","News","Photos","Settings","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","connect","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","Textarea","restProps","child","Input","createField","placeholder","validators","component","text","Field","validate","DialogItem","dialog","active","src","alt","dialogAva","Message","maxLength50","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","Dialogs","dialogElements","d","messagesElements","m","dialogsItems","values","addNewMessage","compose","Paginator","onPageChanged","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onClick","User","user","photos","small","userPhoto","userAva","disabled","some","Users","Preloader","loader","getAllUsers","createSelector","getPageSize","getTotalUSersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","bind","page","totalCount","Post","MyPosts","memo","postsElements","postsBlock","AddNewPostFormRedux","addPost","maxLength10","MyPostsContainer","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","ProfileInfo","descriptionBlock","ava","Profile","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","withRouter","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","formError","stopSubmit","_error","formData","App","initializeApp","path","render","promise","Promise","all","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edeae995.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"paginator_selectedPage__3BnLw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userAva\":\"users_userAva__3El_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__1GRi_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__1pDDF\",\"item\":\"nav_item__3kxs_\",\"activelink\":\"nav_activelink__FfcWD\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    \"API-KEY\": \"6c596676-f22a-4db2-9987-def9fe67b0be\"\r\n  }\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`)\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`)\r\n  },\r\n  getProfile(userId) {\r\n    console.warn('Obsolete method. Please use profileAPI object');\r\n    return profileAPI.getProfile(userId);\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status/`, { status: status });\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe});\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  }\r\n}","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, login, email } = response.data.data;\r\n    dispatch(setAuthUserData(id, login, email, true));\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n    dispatch(stopSubmit('login', { _error: message }));\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n}\r\n\r\nexport default authReducer;","const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Joe\" },\r\n    { id: 2, name: \"Chuck\" },\r\n    { id: 3, name: \"Bill\" },\r\n    { id: 4, name: \"Bob\" },\r\n    { id: 5, name: \"Nick\" }\r\n  ],\r\n  messages: [\r\n    { id: 1, talker: \"me\", message: \"Hey there!\" },\r\n    { id: 2, talker: \"you\", message: \"Let's do it!\" },\r\n    { id: 3, talker: \"you\", message: \"We can achieve it!\" },\r\n    { id: 4, talker: \"me\", message: \"Something went wrong?\" },\r\n  ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_NEW_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 5, talker: \"you\", message: action.newMessageText }]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addNewMessage = (newMessageText) => ({ type: ADD_NEW_MESSAGE, newMessageText });\r\n\r\n\r\nexport default dialogsReducer;","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: 'Hey there!', likesCounter: '12' },\r\n    { id: 2, message: 'My new message', likesCounter: '15' },\r\n    { id: 3, message: 'My new message', likesCounter: '14' },\r\n    { id: 4, message: 'My new message', likesCounter: '11' },\r\n    { id: 5, message: 'My new message', likesCounter: '17' }\r\n  ],\r\n  profile: null,\r\n  status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, { id: 5, message: action.newPostText, likesCounter: '3' }]\r\n      }\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await usersAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;","let initialState = {\r\n  sidebar: {\r\n    friendsName: [\r\n      { id: 1, name: \"Joe\" },\r\n      { id: 2, name: \"Chuck\" },\r\n      { id: 3, name: \"Bill\" },\r\n      { id: 4, name: \"Bob\" },\r\n      { id: 5, name: \"Nick\" }\r\n    ]\r\n  }\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n  return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n  return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps }\r\n    }\r\n    return u;\r\n  })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOwING_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 7,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\r\n        // users: state.users.map(u => {\r\n        //   if (u.id === action.userID) {\r\n        //     return { ...u, followed: true }\r\n        //   }\r\n        //   return u;\r\n        // })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\r\n        // users: state.users.map(u => {\r\n        //   if (u.id === action.userID) {\r\n        //     return { ...u, followed: false }\r\n        //   }\r\n        //   return u;\r\n        // })\r\n      }\r\n    case SET_USERS: {\r\n      return { ...state, users: [...action.users] }\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage }\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.count }\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching }\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userID]\r\n          : state.followingInProgress.filter(id => id !== action.userID)\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const followSuccess = (userID) => ({ type: FOLLOW, userID })\r\nexport const unfollowSuccess = (userID) => ({ type: UNFOLLOW, userID })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userID) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID })\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n  return async (dispatch) => {\r\n\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n  }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userID, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userID));\r\n  let response = await apiMethod(userID);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userID));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userID));\r\n}\r\n\r\nexport const follow = (userID) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userID, usersAPI.follow.bind(usersAPI), followSuccess)\r\n  }\r\n}\r\n\r\nexport const unfollow = (userID) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userID, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n  }\r\n}\r\n\r\nexport default usersReducer;","import { getAuthUserData } from \"./authReducer\";\r\n\r\nconst INITIALIZATION_SUCCESS = 'INITIALIZATION_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializationSuccess = () => ({ type: INITIALIZATION_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(initializationSuccess());\r\n    })\r\n\r\n}\r\n\r\nexport default appReducer;","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  //воспринимает данный объект, как state\r\n  profilePage: profileReducer,\r\n  messagesPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import { NavLink } from 'react-router-dom';\r\nimport cf from './nav.module.css';\r\n\r\nconst Nav = (props) => {\r\n  return (\r\n    <nav className={cf.nav}>\r\n      <div className={cf.item}>\r\n        <NavLink to=\"/profile\" activeClassName={cf.activelink}>Profile</NavLink>\r\n      </div>\r\n      <div className={cf.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={cf.activelink}>Messages</NavLink>\r\n      </div>\r\n      <div className={cf.item}>\r\n        <NavLink to=\"/users\" activeClassName={cf.activelink}>Users</NavLink>\r\n      </div>\r\n      <div className={cf.item}>\r\n        <NavLink to=\"/news\" activeClassName={cf.activelink}>News</NavLink>\r\n      </div>\r\n      <div className={cf.item}>\r\n        <NavLink to=\"/photos\" activeClassName={cf.activelink}>Photos</NavLink>\r\n      </div>\r\n      <div className={cf.item}>\r\n        <NavLink to=\"/settings\" activeClassName={cf.activelink}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n    \r\n  )\r\n}\r\n\r\nexport default Nav;","// import cf from './news.module.css';\r\n\r\nconst News = () => {\r\n  return (\r\n    <div>\r\n      <p>News page</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","// import cf from './photos.module.css';\r\n\r\nconst Photos = () => {\r\n  return (\r\n    <div>\r\n      <p>Photos page</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Photos;","// import cf from './settings.module.css';\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <div>\r\n      <p>Settings page</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n  if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n}","import { Field } from 'redux-form';\r\nimport cf from './formsControls.module.css';\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={cf.error}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      <div>\r\n        {hasError && <span id='error-span'>{error}</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n  <div>\r\n    <Field placeholder={placeholder} name={name}\r\n      validate={validators}\r\n      component={component}\r\n      {...props} />{text}\r\n  </div>\r\n)","import { NavLink } from 'react-router-dom';\r\nimport cf from './../dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={cf.dialog}>\r\n      <NavLink to={\"/dialogs/\" + props.id} activeClassName={cf.active}><img src=\"images/avatar-icon.jpg\" alt=\"avatar\" className={cf.dialogAva}></img>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import cf from './../dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={cf.message}>{props.talker}: {props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/formsControls';\r\nimport DialogItem from './dialogItem/dialogItem';\r\nimport cf from './dialogs.module.css';\r\nimport Message from './message/message';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogElements = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n\r\n  let messagesElements = props.messages.map(m => <Message message={m.message} key={m.id} talker={m.talker} />)\r\n\r\n  let addAnotherMessage = (values) => {\r\n    props.addNewMessage(values.newMessageText);\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n  return (\r\n    <div className={cf.dialogs}>\r\n      <div className={cf.dialogsItems}>\r\n        {dialogElements}\r\n      </div>\r\n      <div className={cf.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addAnotherMessage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field validate={[required, maxLength50]} component={Textarea} name='newMessageText' placeholder='Enter your message' />\r\n      </div>\r\n      <div>\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n  form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addNewMessage } from '../../redux/dialogsReducer';\r\nimport Dialogs from './dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n  // передает данные через props в компоненту Dialogs;\r\n  return {\r\n    dialogs: state.messagesPage.dialogs,\r\n    messages: state.messagesPage.messages,\r\n    newMessageText: state.messagesPage.newMessageText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewMessage: (newMessageText) => {\r\n      dispatch(addNewMessage(newMessageText));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);","import cf from './paginator.module.css';\r\n\r\nlet Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return <div>\r\n      {pages.map(p => {\r\n        return <span className={currentPage === p && cf.selectedPage} onClick={() => { onPageChanged(p); }}>{p}</span>\r\n      })}\r\n    </div>\r\n}\r\n\r\n  export default Paginator;","export default __webpack_public_path__ + \"static/media/photo_small.a355bbd7.jpg\";","import { NavLink } from 'react-router-dom';\r\nimport userPhoto from '../../assets/images/photo_small.jpg';\r\nimport cf from './users.module.css';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n  return (\r\n    <div>\r\n        <span>\r\n          <div>\r\n            <NavLink to={'/profile/' + user.id}>\r\n              <img src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\" className={cf.userAva} />\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n\r\n            {user.followed\r\n              ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={() => { unfollow(user.id); }}>\r\n                Unfollow</button>\r\n\r\n              : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={() => { follow(user.id) }}>\r\n                Follow</button>}\r\n\r\n          </div>\r\n        </span>\r\n        <span>\r\n          <span>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n          </span>\r\n          <span>\r\n            <div>{'u.location.country'}</div>\r\n            <div>{\"u.location.city\"}</div>\r\n          </span>\r\n        </span>\r\n      </div>)\r\n}\r\n\r\nexport default User;","import Paginator from '../common/paginator/paginator';\r\nimport User from './user';\r\n\r\nlet Users = ({ currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props }) => {\r\n\r\n  return <div>\r\n    <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalUsersCount={totalUsersCount} pageSize={pageSize} />\r\n    <div>\r\n      {\r\n        users.map(u => <User followingInProgress={props.followingInProgress}\r\n          unfollow={props.unfollow}\r\n          follow={props.follow}\r\n          user={u}\r\n          key={u.id} />)\r\n      }\r\n    </div>\r\n  </div>;\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/1484.fdfb5c59.gif\";","import loader from '../../../assets/images/1484.gif';\r\n\r\nlet Preloader = (props) => {\r\n  return <div>\r\n    <img src={loader} alt='loading' />\r\n  </div>\r\n}\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\"\r\n\r\nconst getUsers = (state) => {\r\n  return state.usersPage.users;\r\n}\r\n\r\nexport const getAllUsers = createSelector(getUsers, (users) => {\r\n  return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUSersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n}","import { connect } from \"react-redux\";\r\nimport { follow, setCurrentPage, unfollow, toggleFollowingProgress, getUsers } from \"../../redux/usersReducer\";\r\nimport React from 'react';\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getPageSize, getAllUsers, getTotalUSersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from \"../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const {currentPage, pageSize} = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber => {\r\n    const {pageSize} = this.props;\r\n    this.props.getUsers(pageNumber, pageSize);\r\n  })\r\n\r\n  render() {\r\n\r\n    return <>\r\n      {this.props.isFetching ? <Preloader /> : null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        users={this.props.users}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        onPageChanged={this.onPageChanged}\r\n        toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n        followingInProgress={this.props.followingInProgress} />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getAllUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUSersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers })\r\n)(UsersContainer);","import cf from './post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={cf.item}>\r\n      <img src=\"images/avatar-icon.jpg\" alt=\"post avatar\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>Like</span>\r\n        {props.likesCounter}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/formsControls';\r\nimport cf from './myPosts.module.css';\r\nimport Post from './post/post';\r\n\r\nconst MyPosts = React.memo ( props => {\r\n\r\n  let postsElements = props.posts.map(p => <Post message={p.message} key={p.id} likesCounter={p.likesCounter} />)\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={cf.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={cf.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostText' validate={[required, maxLength10]} placeholder=\"typing...\" />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n  form: 'ProfileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/profileReducer';\r\nimport MyPosts from './myPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPost(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const  onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || '-------'}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../common/preloader/preloader';\r\nimport cf from './profileInfo.module.css';\r\nimport ProfileStatusWithHooks from './profileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img src=\"images/lakes.jpg\" alt=\"info\"></img>\r\n      </div> */}\r\n      <div className={cf.descriptionBlock}>\r\n        <img src={profile.photos.small} alt=\"avatar\" className={cf.ava}></img>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n      </div >\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from './myPosts/myPostsContainer';\r\nimport ProfileInfo from './profileInfo/profileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './profile';\r\nimport { getUserProfile, updateStatus, getStatus } from \"../../redux/profileReducer\";\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);","import { NavLink } from 'react-router-dom';\r\nimport cf from './header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={cf.header}>\r\n      <img src=\"https://cdn.logo.com/hotlink-ok/logo-social.png\" alt=\"logo\"></img>\r\n\r\n      <div className={cf.loginBlock}>\r\n        {props.isAuth\r\n         ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n         : <NavLink to={'/login'}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './header';\r\nimport { logout } from \"../../redux/authReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import { connect } from \"react-redux\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport { required } from \"../../utils/validators/validators\"\r\nimport { createField, Input } from \"../common/FormsControls/formsControls\"\r\nimport { login } from \"../../redux/authReducer\"\r\nimport { Redirect } from \"react-router\"\r\nimport cf from \"../common/FormsControls/formsControls.module.css\"\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField('Email', 'email', [required], Input)}\r\n      {createField('Password', 'password', [required], Input, { type: 'password' })}\r\n      {createField(null, 'rememberMe', null, Input, { type: 'checkbox' }, 'remember me')}\r\n\r\n      { error && <div className={cf.formError}>{error}</div>}\r\n      <div>\r\n        <button>Sign in</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'} />\r\n  }\r\n  return <div>\r\n    <h1>Login</h1>\r\n    <LoginReduxForm onSubmit={onSubmit} />\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import './App.css';\r\nimport Nav from './components/nav/nav';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport News from './components/news/news';\r\nimport Photos from './components/photos/photos';\r\nimport Settings from './components/settings/settings';\r\nimport DialogsContainer from './components/dialogs/dialogsContainer';\r\nimport UsersContainer from './components/users/usersContainer';\r\nimport ProfileContainer from './components/profile/profileContainer';\r\nimport HeaderContainer from './components/header/headerContainer';\r\nimport LoginPage from './components/login/login';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from \"./redux/appReducer\";\r\nimport { compose } from 'redux';\r\nimport Preloader from './components/common/preloader/preloader';\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  render() {\r\n\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Nav />\r\n        <div className=\"app-content-wrapper\">\r\n          <Route path=\"/profile/:userId?\"\r\n            render={() => <ProfileContainer />} />\r\n          <Route path=\"/dialogs\"\r\n            render={() => <DialogsContainer />} />\r\n          <Route path=\"/users\"\r\n            render={() => <UsersContainer />} />\r\n          <Route path=\"/login\"\r\n            render={() => <LoginPage />} />\r\n          <Route path=\"/news\" render={() => <News />} />\r\n          <Route path=\"/photos\" render={() => <Photos />} />\r\n          <Route path=\"/settings\" render={() => <Settings />} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App);","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/reduxStore';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__1TvAn\",\"dialogsItems\":\"dialogs_dialogsItems__1VVWO\",\"active\":\"dialogs_active__2Yo4j\",\"messages\":\"dialogs_messages__1V8Mu\",\"dialogAva\":\"dialogs_dialogAva__2BYb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__23CaI\",\"error-span\":\"formsControls_error-span__1cL9L\",\"formError\":\"formsControls_formError__28bE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"myPosts_postsBlock__81pWY\",\"posts\":\"myPosts_posts__4JQtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"profileInfo_ava__Khczz\",\"descriptionBlock\":\"profileInfo_descriptionBlock__3iQuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1KEzr\",\"loginBlock\":\"header_loginBlock__2GUhh\"};"],"sourceRoot":""}